version: '3' #He puesto esta version de docker-compose.file en funcion de la Docker Engine release
#Además, la version 1 no se puede pq no deja usar volumes, y siempre será mejor una version 
#actualizada que la 2, por eso la 3
services:
  productpage:
    build: ./bookinfo/src/productpage/.
    image: 02/productpage
    container_name: 02-productpage
    ports:
      - '9080:9080' #Mirar esto, no puede haber un microservicio que esté usando el mismo puerto que otro
#Primero puerto del host, segundo puerto del container
    environment:
      - GROUP_NUMBER=02
#Y los volumes son necesarios?Si,ya que tenemos que definir los volumnes que va a necestirar nuestra infraestructura 
#Ejemplo de volumes: volumes:
#	- myapp:/home/node/app
#    volumes:
#      - 02_app:/var/lib/productpage  #Ruta de donde va a estar el volumen este	
#volumes:
#  02_app:
  details:
    build: ./bookinfo/src/details/.
    image: 02/details
    container_name: 02-details
#    ports:	NO SE LE PONE PORT, SOLO AL PRODUCTPAGE
#      - '9080:9080' #Mirar esto, no está bien, no puede haber un microservicio que esté usando el mismo puerto que otro
#Primero puerto del host, segundo puerto del container
    environment:
      - SERVICE_VERSION=v1
      - ENABLE_EXTERNAL_BOOK_SERVICE=true
  ratings:
    build: ./bookinfo/src/ratings/.
    image: 02/ratings
    container_name: 02-ratings
#    ports:
#     - '9080:9080' #Mirar esto, no está bien, no puede haber un microservicio que esté usando el mismo puerto que otro
#Primero puerto del host, segundo puerto del container
    environment:
      - SERVICE_VERSION=v1
  reviews:
    build: ./bookinfo/src/reviews/reviews-wlpcfg/.
    image: 02/reviews
    container_name: 02-reviews
#    ports:
#     - '9080:9080' #Mirar esto, no está bien, no puede haber un microservicio que esté usando el mismo puerto que otro
#Primero puerto del host, segundo puerto del container
    environment:
      - SERVICE_VERSION=v1
